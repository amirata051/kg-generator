services:
  zookeeper:
    image: zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  falkordb:
    image: falkordb/falkordb:v4.8.7
    container_name: falkordb
    ports:
      - "6379:6379"    # Redis protocol port for FalkorDB internal store
      - "3000:3000"    # Web UI port
    volumes:
      - falkordb_data:/data

  redis:
    image: redis:7.2.1
    container_name: redis
    ports:
      - "6380:6379"    # Redis for hashing state

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:5540"    # host 8001 â†’ container 5540
    depends_on:
      - redis

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: kg-api
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - minio
      - falkordb
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: kg-worker
    command: ["python", "-m", "app.workers.worker"]
    depends_on:
      - kafka
      - minio
      - falkordb
      - redis

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.frontend
    container_name: kg-frontend
    ports:
      - "8501:8501"
    depends_on:
      - api

volumes:
  minio_data:
  falkordb_data:
